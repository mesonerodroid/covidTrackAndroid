Ventajas kotlin.
Expresivo y conciso, elimina el boipolate code, el código innecesario.
Prevención de null pointers.
las coroutines permiten implementar código asincrónico con un estilo idéntico al código sincrónico. Eliminando callbacks anidados


Let:
Una alternativa más adecuada será utilizar el operador let, el cual, 
internamente, crea una copia de la variable a comprobar en una variable 
inmutable local que será utilizada en el bloque definido a continuación. 
De este modo, podríamos pensar en una posible solución como la siguiente:

var propiedad: Int? = 42
fun unMetodo() {
    propiedad.let {
        print(it) 
    }
}  

En este ejemplo, la función let verifica si propiedad es null. 
En caso de no serlo, realiza una copia de propiedad en it y ejecuta el Lambda.

It:
One other helpful convention is that if a function literal has only one parameter,
 its declaration may be omitted (along with the ->), and its name will be it
 
             viewModel.variableLiveData.observe(viewLifecycleOwner, Observer {

                Log.e("FIRST", "refrescada livedata "+it)
            })
Ese it es el parámetro de la función onChanged, que está omitida